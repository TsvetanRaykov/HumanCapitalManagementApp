@page "/AddJob"
@using Microsoft.AspNetCore.Authorization
@using AutoMapper

@attribute [Authorize]
@inject IHttpClientFactory HttpClientFactory
@inject IMapper Mapper

<PageTitle>Add Job</PageTitle>

<JobEdit JobViewModel="_job" OnModelUpdated="ConfirmUpdate"></JobEdit>

<ConfirmDialog ConfirmationChanged="ConfirmationResult" @ref="_confirmationDialog"></ConfirmDialog>

<ToastComponent @ref="_toast" Delay="5000"></ToastComponent>

@code
{
    private readonly JobViewModel _job = new();

    private ToastComponent? _toast;

    private ConfirmDialog? _confirmationDialog;

    private async Task<string?> CreateJobAsync()
    {
        var jobDto = Mapper.Map<JobDto>(_job);
        try
        {
            var response = await HttpClientFactory.CreateClient("Api").PostAsJsonAsync("/api/v1/Jobs", jobDto);
            response.EnsureSuccessStatusCode();
            return $"Job {jobDto.Title} created.";
        }
        catch (HttpRequestException e)
        {
            return e.Message;
        }
    }
    private void ConfirmUpdate()
    {
        _confirmationDialog?.Show("Confirm Job Creation", $"Job {_job.Title} will be created");
    }
    private async void ConfirmationResult(bool confirmed)
    {
        var notify = confirmed ? await CreateJobAsync() : string.Empty;
        _toast?.ShowToast(new ToastMessage(notify));
    }

}
