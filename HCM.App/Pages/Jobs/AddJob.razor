@page "/AddJob"
@using Microsoft.AspNetCore.Authorization
@using AutoMapper
@using HCM.Shared.Data.DTO
@inject IMapper Mapper
@inject IHttpClientFactory HttpClientFactory

@attribute [Authorize]
<h3>Add Job</h3>

<EditForm Model="_job" OnValidSubmit="@HandleValidSubmit" class="row g-3">
    <DataAnnotationsValidator />
    <div class="col-12">
        <label for="jobTitle" class="form-label">Title</label>
        <InputText @bind-Value="_job.Title" class="form-control" id="jobTitle"></InputText>
    </div>
    <div class="col-12">
        <label for="jobDescription" class="form-label">Description (optional)</label>
        <InputTextArea @bind-Value="_job.Description" class=" form-control" id="jobDescription"></InputTextArea>
    </div>

    <div class="col-md-6">
        <label for="jobMinSalary" class="form-label">Min Salary</label>
        <InputText @bind-Value="_job.MinSalaryString" class="form-control" id="jobMinSalary"></InputText>
    </div>
    <div class="col-md-6">
        <label for="jobMaxSalary" class="form-label">Max Salary</label>
        <InputText @bind-Value="_job.MaxSalaryString" class="form-control" id="jobMaxSalary"></InputText>
    </div>

    <div class="col-12">
        <button type="submit" class="btn btn-primary">Create</button>
    </div>
    <ValidationSummary />
</EditForm>

<p class="my-4">@_notify</p>

@code {
    private readonly JobViewModel _job = new();
    private string _notify;

    private async void HandleValidSubmit()
    {
        var jobDto = Mapper.Map<JobDto>(_job);

        try
        {
            var response = await HttpClientFactory.CreateClient("Api").PostAsJsonAsync("/api/v1/Jobs", jobDto);
            response.EnsureSuccessStatusCode();
            _notify = $"Job {_job.Title} created.";
        }
        catch (HttpRequestException e)
        {
            _notify = e.Message;
        }

        await InvokeAsync(StateHasChanged);
    }

}