@page "/AddEmployee"

@using Microsoft.AspNetCore.Authorization
@using AutoMapper
@using System.Net
@using HCM.Shared
@attribute [Authorize]
@inject IHttpClientFactory HttpClientFactory
@inject IMapper Mapper

<PageTitle>Add Employee</PageTitle>

<EmployeeEdit OnModelUpdated="ConfirmUpdate" EmployeeViewModel="_employeeViewModel"></EmployeeEdit>

<ConfirmDialog ConfirmationChanged="ConfirmationResult" @ref="_confirmationDialog"></ConfirmDialog>

<ToastComponent @ref="_toast" Delay="5000"></ToastComponent>

@code {

    private readonly EmployeeViewModel _employeeViewModel = new EmployeeViewModel
    {
        HireDate = DateTime.Now
    };
    private ToastComponent? _toast;
    private ConfirmDialog? _confirmationDialog;

    private void ConfirmUpdate()
    {
        _confirmationDialog?.Show("Confirm Employee Creation", $"Employee {_employeeViewModel?.FirstName} {_employeeViewModel?.LastName} will be added to the system");
    }

    private async void ConfirmationResult(bool confirmed)
    {
        if (!confirmed) return;
        var notify = await CreateEmployeeAsync();
        _toast?.ShowToast(new ToastMessage(notify));
    }

    private async Task<string?> CreateEmployeeAsync()
    {
        var employeeDto = Mapper.Map<EmployeeDto>(_employeeViewModel);
        var response = await HttpClientFactory.CreateClient("Api").PostAsJsonAsync(HcmConstants.ApiEndpoints.Employees, employeeDto);
        try
        {
            response.EnsureSuccessStatusCode();
            return $"Employee {employeeDto.FirstName} {employeeDto.LastName} has been added to the system.";
        }
        catch (HttpRequestException e)
        {
            if (e.StatusCode == HttpStatusCode.UnprocessableEntity)
                return await response.Content.ReadAsStringAsync();

            return e.Message;
        }

    }

}